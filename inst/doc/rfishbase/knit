#!/usr/bin/Rscript

## ./knit [epub|github|html|pdf|doc] to generate different types of output

library(knitr)

## use a custom pattern list: begin by ``` {r code begin} and end by ````; `ri
## [inline code] ir`; `ro [global options] or`
pat_gfm()

## use GFM as the output format: R code in ```r and ``` (both GitHub and pandoc
## recognize it)
render_gfm()

## global chunk options: use high quality Cairo PNG device
pdf.options(pointsize = 10)  # smaller pointsize for recording plots
opts_chunk$set(cache=TRUE, fig.path='figure/', dev='Cairo_png',
  fig.width=5, fig.height=5, cache.path = 'cache-local/', par=TRUE)

## chunk hooks
knit_hooks$set(par=function(before, options, envir){
  if (before && options$fig.show!='none') 
    par(mar=c(4,4,.1,.1), cex.lab=.95, cex.axis=.9, mgp=c(2,.7,0), tcl=-.3)
})



## verbose compile
opts_knit$set(progress = TRUE, verbose = TRUE)

local({
  fmt = commandArgs(TRUE)
  if (length(fmt) == 0L) fmt = 'github'
  if (fmt %in% c('github', 'html')) {
    ## xtable html format for github/html output.  
    ## otherwise this should be ignored (defaults to 'latex') for pdf output
    options(xtable.type = 'html')
    # upload to flickr when output is for github or html
    opts_knit$set(upload.fun = socialR::flickr.url)
    opts_chunk$set(cache.path = 'cache-upload/')

  } else if (fmt %in% c('odt', 'docx', 'epub')) {
    options(xtable.type = 'html')

  } else if (fmt == 'tex') {
    opts_chunk$set(cache.path = 'cache-pdf/')
    options(xtable.type = "latex" )
    # use pdf graphics for PDF output
    opts_chunk$set(dev = 'pdf', fig.width=5, fig.height=5)

  } else if (fmt == 'pdf') {
    # um, we're gonna still make markdown first, so we need html output
    options(xtable.type = 'html')
    opts_chunk$set(cache.path = 'cache-pdf/')
    # use high quality tikz graphics for PDF output
#    opts_chunk$set(dev = 'tikz', fig.width=4, fig.height=4)
#    x = readLines('template.tex')
#    options(tikzDocumentDeclaration = x[1], tikzDefaultEngine = 'xetex')
#    assign('tikzPackages', c(x[2:13], '\n'), envir = knitr:::.knitEnv)
    # use pdf graphics for PDF output
    opts_chunk$set(dev = 'pdf', fig.width=5, fig.height=5)
  }
  
  # knit all md files under ./source
  files <- list.files('./source/',  full.names = TRUE)
  files <- files[grep(".*\\.md", files)]
  for (f in files) {
    knit(f, output = basename(f))
  }
})

## convert to an ebook (EPUB) or other formats with pandoc shell commands
